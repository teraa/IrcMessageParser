name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ released ]
  workflow_dispatch:
    inputs:
      nuget:
        description: 'Publish to NuGet'
        required: true
        type: boolean
        default: false

jobs:
  publish:
    name: Publish

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity minimal

      - name: Pack
        id: pack
        if: contains(fromJson('["push", "workflow_dispatch", "release"]'), github.event_name)
        run: |
          set -x
          options=(
            --configuration Release
            --no-build
            --output nupkgs
            -p:IncludeSymbols=true
            -p:SymbolPackageFormat=snupkg
          )

          if [[ ${{ github.event_name }} != release ]]; then
            options+=(--version-suffix alpha.$GITHUB_RUN_NUMBER)
          fi

          dotnet pack ${options[@]}

      - name: Push (GitHub)
        if: steps.pack.outcome == 'success'
        run: dotnet nuget push "nupkgs/*.nupkg" --source https://nuget.pkg.github.com/teraa/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate

      - name: Push (NuGet.org)
        if: >
          (steps.pack.outcome == 'success') &&
          ((github.event_name == 'release') || (github.event.inputs.nuget == 'true'))
        run: dotnet nuget push "nupkgs/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
